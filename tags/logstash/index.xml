<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>logstash on Yullin Blog 运维 生活</title>
    <link>//yull.in/tags/logstash.html</link>
    <description>Recent content in logstash on Yullin Blog 运维 生活</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 26 Oct 2018 00:00:00 +0000</lastBuildDate><atom:link href="//yull.in/tags/logstash/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>configure elasticsearch logstash kibana</title>
      <link>//yull.in/2018/10/config-elasticsearch-logstash-kibana.html</link>
      <pubDate>Fri, 26 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>//yull.in/2018/10/config-elasticsearch-logstash-kibana.html</guid>
      <description>本文主要记录ELK的测试环境的搭建过程
1.环境以及架构 Jumper 系统版本 IP地址 主机名 角色 d1000 CENTOS 7 10.2.0.10 centosELK10 Kibana d1000 CENTOS 7 10.2.0.11 centosELK11 Logstash d1000 CENTOS 7 10.2.0.12 centosELK12 ElasticSearch 本次的所有环境均是基于CENTOS7系统进行搭建。
首先是准备环境，安装JAVA运行环境JDK。
yum install java-1.8.0-openjdk-devel 2.</description>
    </item>
    
    <item>
      <title>configure elasticsearch ingest node</title>
      <link>//yull.in/2018/08/config-elasticsearch-ingest-node.html</link>
      <pubDate>Mon, 20 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>//yull.in/2018/08/config-elasticsearch-ingest-node.html</guid>
      <description>在elastic 5.*版本开始支持ingest node功能，他可以在一定程度上替代Logstash的处理功能，只要是熟悉了其支持的格式之后，配置还是比较简单的。
1.测试可以用如下命令 curl -v -H &amp;lsquo;Content-Type: application/json&amp;rsquo; -X POST &amp;lsquo;http://10.2.4.34:9200/_ingest/pipeline/_simulate&amp;rsquo; -d@filebeat.test.json
filebeat.test.json的内容如下：
{&amp;#34;pipeline&amp;#34; : {&amp;#34;description&amp;#34; : &amp;#34;nginx access log&amp;#34;,&amp;#34;processors&amp;#34;: [{&amp;#34;grok&amp;#34;: {&amp;#34;field&amp;#34;: &amp;#34;message&amp;#34;,&amp;#34;patterns&amp;#34;: [&amp;#34;%{IP:client_ip} %{TIMESTAMP_ISO8601:iso_time} %{BASE10NUM:timestamp} %{BASE10NUM:request_time} %{BASE10NUM:request_length} %{INT:connection_id} %{INT:connection_requests} %{PATH:uri} \&amp;#34;%{WORD:request_method} %{NOTSPACE:request} HTTP/%{NUMBER:httpversion}\&amp;#34; %{NUMBER:response_status} (?</description>
    </item>
    
  </channel>
</rss>
